# -*- coding: utf-8 -*-
"""Copy of Resole data analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CH-OxrD0qsqxmOgsJbZf4IxY_LbBXpL8
"""

import pandas as pd
import matplotlib.pyplot as plt


from google.colab import files
uploaded = files.upload()

file_name = list(uploaded.keys())[0]


df = pd.read_excel(file_name)


print("Column Names:", df.columns)

employment_column = "Employment Status"
if employment_column not in df.columns:
    print(f"Column '{employment_column}' not found! Check column names above.")
else:

    employment_counts = df[employment_column].value_counts()


    plt.figure(figsize=(8, 5))
    employment_counts.plot(kind='bar', color='skyblue', edgecolor='black')


    plt.title("Employment Status Distribution")
    plt.xlabel("Employment Status")
    plt.ylabel("Count")
    plt.xticks(rotation=45)
    plt.grid(axis='y', linestyle='--', alpha=0.7)


    plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import os



df = pd.read_excel(file_name)  le


print("Column Names:", df.columns)

employment_column = "Employment Status"

if employment_column not in df.columns:
    print(f"Column '{employment_column}' not found! Check column names above.")
else:

    valid_responses = ["Homeless", "Unemployed", "Asylum seeker", "Unable to work (please specify)", "Employed part-time"]


    filtered_df = df[df[employment_column].isin(valid_responses)]


    employment_counts = filtered_df[employment_column].value_counts()


    plt.figure(figsize=(8, 5))
    employment_counts.plot(kind='bar', color='skyblue', edgecolor='black')


    plt.title("Filtered Employment Status Distribution")
    plt.xlabel("Employment Status")
    plt.ylabel("Count")
    plt.xticks(rotation=45)
    plt.grid(axis='y', linestyle='--', alpha=0.7)


    plt.show()

file_name = "gross-disposable-household-income-per-head-map-data.csv"


df = pd.read_csv(file_name, skiprows=7)


plt.figure(figsize=(12, 6))
plt.bar(df["Area name"], df["Value (£)"], color='skyblue', edgecolor='black')


plt.title("Gross Disposable Household Income per Head by Area")
plt.xlabel("Area Name")
plt.ylabel("Income (£)")
plt.xticks(rotation=90)
plt.grid(axis='y', linestyle='--', alpha=0.7)


plt.show()

import pandas as pd
import matplotlib.pyplot as plt


file_name = "gross-disposable-household-income-per-head-map-data.csv"


df = pd.read_csv(file_name, skiprows=7)


df_sorted_lowest = df.sort_values(by="Value (£)", ascending=True).head(15)


plt.figure(figsize=(12, 6))
plt.bar(df_sorted_lowest["Area name"], df_sorted_lowest["Value (£)"], color='red', edgecolor='black')


plt.title("Bottom 15 Areas - Gross Disposable Household Income per Head", fontsize=14)
plt.xlabel("Area Name", fontsize=12)
plt.ylabel("Income (£)", fontsize=12)
plt.xticks(rotation=45, ha="right", fontsize=10)
plt.grid(axis='y', linestyle='--', alpha=0.7)


plt.show()

import pandas as pd
import matplotlib.pyplot as plt


file_name = "economic-inactivity-rate-map-data.csv"


df_inactivity = pd.read_csv(file_name, skiprows=7)


df_sorted_highest_inactivity = df_inactivity.sort_values(by="Value (%)", ascending=False).head(15)
plt.figure(figsize=(12, 6))
plt.bar(df_sorted_highest_inactivity["Area name"], df_sorted_highest_inactivity["Value (%)"], color='darkred', edgecolor='black')

plt.title("Top 15 Areas - Economic Inactivity Rate (Great Britain)", fontsize=14)
plt.xlabel("Area Name", fontsize=12)
plt.ylabel("Inactivity Rate (%)", fontsize=12)
plt.xticks(rotation=45, ha="right", fontsize=10)  # Rotate labels for readability
plt.grid(axis='y', linestyle='--', alpha=0.7)


plt.show()

file_name = "modelled-unemployment-map-data.csv"


df_unemployment = pd.read_csv(file_name, skiprows=7)


df_sorted_highest_unemployment = df_unemployment.sort_values(by="Value (%)", ascending=False).head(15)

plt.figure(figsize=(12, 6))
plt.bar(df_sorted_highest_unemployment["Area name"], df_sorted_highest_unemployment["Value (%)"], color='darkblue', edgecolor='black')

plt.title("Top 15 Areas - Modelled Unemployment Rate (Great Britain)", fontsize=14)
plt.xlabel("Area Name", fontsize=12)
plt.ylabel("Unemployment Rate (%)", fontsize=12)
plt.xticks(rotation=45, ha="right", fontsize=10)
plt.grid(axis='y', linestyle='--', alpha=0.7)


plt.show()

file_name = "claimant-count-map-data.csv"


df_claimant = pd.read_csv(file_name, skiprows=7)

df_sorted_highest_claimant = df_claimant.sort_values(by="Value (%)", ascending=False).head(15)
plt.figure(figsize=(12, 6))
plt.bar(df_sorted_highest_claimant["Area name"], df_sorted_highest_claimant["Value (%)"], color='purple', edgecolor='black')


plt.title("Top 15 Areas - Claimant Count (Unemployment Benefits)", fontsize=14)
plt.xlabel("Area Name", fontsize=12)
plt.ylabel("Claimant Count (%)", fontsize=12)
plt.xticks(rotation=45, ha="right", fontsize=10)  # Rotate labels for readability
plt.grid(axis='y', linestyle='--', alpha=0.7)


plt.show()