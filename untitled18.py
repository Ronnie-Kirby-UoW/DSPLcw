# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OaYuNRfqbnUJ2DYtMJwS7D6fosx7DGS3
"""

pip install dash pandas plotly

import matplotlib.pyplot as plt
import pandas as pd

# here i am loading the data and cleaning it so only select columns are included
df = pd.read_csv("/content/sample_data/T84_AltKSYq.csv", skiprows=2)
df.columns = [
    "Area code", "Area name", "Prevention duty owed", "Prevention duty per 1k",
    "Relief duty owed", "Relief duty per 1k", "Main duty owed", "Main duty per 1k",
    "Not owed duty", "Not owed duty per 1k"
]
df = df.dropna(subset=["Area name"])
df = df[~df["Area name"].isin(["London", "Rest of England"])]


boroughs = df["Area name"]
x = range(len(boroughs))

bar_width = 0.25
plt.figure(figsize=(14, 7))

plt.bar(x, df["Prevention duty per 1k"], width=bar_width, label="Prevention")
plt.bar([p + bar_width for p in x], df["Relief duty per 1k"], width=bar_width, label="Relief")
plt.bar([p + 2 * bar_width for p in x], df["Main duty per 1k"], width=bar_width, label="Main")


plt.xticks([p + bar_width for p in x], boroughs, rotation=90)
plt.ylabel("Duties per 1,000 households")
plt.title("Homelessness Duties per 1,000 Households by London Borough (2024 Q2)")
plt.legend()
plt.tight_layout()
plt.show()

import pandas as pd

import io
df = pd.read_csv("/content/sample_data/T84_AltKSYq.csv", skiprows=2)

# Rename columns as getting weird errors due to columns being named incompatibile to python
df.columns = [
    "Area code", "Area name", "Prevention duty owed", "Prevention duty per 1k",
    "Relief duty owed", "Relief duty per 1k", "Main duty owed", "Main duty per 1k",
    "Not owed duty", "Not owed duty per 1k"
]

# Drop missing area names
df = df.dropna(subset=["Area name"])
df = df[~df["Area name"].isin(["London", "Rest of England"])]

df.head()

import matplotlib.pyplot as plt

boroughs = df["Area name"]
x = range(len(boroughs))
bar_width = 0.25

plt.figure(figsize=(14, 7))
plt.bar(x, df["Prevention duty per 1k"], width=bar_width, label="Prevention")
plt.bar([p + bar_width for p in x], df["Relief duty per 1k"], width=bar_width, label="Relief")
plt.bar([p + 2 * bar_width for p in x], df["Main duty per 1k"], width=bar_width, label="Main")

plt.xticks([p + bar_width for p in x], boroughs, rotation=90)
plt.ylabel("Duties per 1,000 Households")
plt.title("Homelessness Duties per 1,000 Households by London Borough (2024 Q2)")
plt.legend()
plt.tight_layout()
plt.show()

df["Total duties owed"] = df["Prevention duty owed"] + df["Relief duty owed"] + df["Main duty owed"]
top5 = df.sort_values(by="Total duties owed", ascending=False).head(5)
top5[["Area name", "Total duties owed"]]

plt.figure(figsize=(14, 7))
plt.bar(boroughs, df["Prevention duty per 1k"], label="Prevention")
plt.bar(boroughs, df["Relief duty per 1k"], bottom=df["Prevention duty per 1k"], label="Relief")
plt.bar(boroughs, df["Main duty per 1k"],
        bottom=df["Prevention duty per 1k"] + df["Relief duty per 1k"], label="Main")

plt.xticks(rotation=90)
plt.ylabel("Duties per 1,000 Households")
plt.title("Stacked Duties per 1,000 Households by London Borough (2024 Q2)")
plt.legend()
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df_rough = pd.read_csv("/content/sample_data/T82_uzc8wCZ.csv", skiprows=2)  # Adjust file path if running locally


df_top = df_rough.sort_values(by="CHAIN (2023/24)", ascending=False)


plt.figure(figsize=(16, 8))
bar_width = 0.4
x = range(len(df_top))


plt.bar(x, df_top["CHAIN (2022/23)"], width=bar_width, label="2022/23", color="skyblue")
plt.bar([p + bar_width for p in x], df_top["CHAIN (2023/24)"], width=bar_width, label="2023/24", color="salmon")


plt.xticks([p + bar_width / 2 for p in x], df_top["Borough"], rotation=90)
plt.ylabel("People Seen Sleeping Rough")
plt.title("Rough Sleeping in London Boroughs (CHAIN Data: 2022/23 vs 2023/24)")
plt.legend()
plt.tight_layout()


plt.show()



import pandas as pd
import matplotlib.pyplot as plt


df_rough = pd.read_csv("/content/sample_data/T82_uzc8wCZ.csv", skiprows=2)
df_duties = pd.read_csv("/content/sample_data/T84_AltKSYq.csv", skiprows=2)


df_rough = df_rough.rename(columns={"Borough": "Area name"})


valid_boroughs = df_duties["Area name"].unique()
df_rough = df_rough[df_rough["Area name"].isin(valid_boroughs)]
df_duties = df_duties[df_duties["Area name"].isin(df_rough["Area name"])]


df_combined = pd.merge(df_rough, df_duties, on="Area name")


df_labeled = df_combined[["Area name", "CHAIN (2023/24)", "Relief duty owed"]].copy()
df_labeled["Relief per rough sleeper"] = df_labeled["Relief duty owed"] / df_labeled["CHAIN (2023/24)"]


plt.figure(figsize=(12, 8))

scatter = plt.scatter(
    df_labeled["CHAIN (2023/24)"],
    df_labeled["Relief duty owed"],
    c=df_labeled["Relief per rough sleeper"],
    cmap='viridis',
    s=100,
    edgecolors='black'
)


for i in range(len(df_labeled)):
    plt.text(
        df_labeled["CHAIN (2023/24)"].iloc[i],
        df_labeled["Relief duty owed"].iloc[i],
        df_labeled["Area name"].iloc[i],
        fontsize=8,
        alpha=0.7
    )

plt.xlabel("People Seen Sleeping Rough (CHAIN 2023/24)")
plt.ylabel("Relief Duty Owed")
plt.title("Rough Sleeping vs Relief Duty by Borough (with Relief Efficiency)")
cbar = plt.colorbar(scatter)
cbar.set_label("Relief Duty per Rough Sleeper")
plt.grid(True)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df_proj = pd.read_excel("/content/sample_data/Rough_Sleeping_Projection_2025.xlsx")

print(df_proj.columns.tolist())

top5_proj = df_proj.nlargest(5, "Projected (2024/25)").copy()

plt.figure(figsize=(10, 6))
for _, row in top5_proj.iterrows():
    plt.plot(
        ["2022/23", "2023/24", "2024/25 (Projected)"],
        [row["CHAIN (2022/23)"], row["CHAIN (2023/24)"], row["Projected (2024/25)"]],
        marker='o',
        label=row["Borough"]
    )


plt.title("Rough Sleeping Trend & Projection (Top 5 Boroughs)")
plt.xlabel("Year")
plt.ylabel("People Seen Sleeping Rough")
plt.legend(title="Borough")
plt.grid(True)
plt.tight_layout()
plt.show()